String 特点
  1) String 是Java中最重要的API 
     A) 所有的字符数据输出都用了Srting
     B) 为了提高性能！String 优化的非常彻底。
  2) String 是final类型！
     面试题目： class MyString extends String{}
     编译错误：String 是final类！
  3) “String 对象”是不可改变的！
  4) String 中封装了一个char类型的数组
      每个字符都是unicode字符。
      每个字符在内存中占有 16位（2字节byte）
  5) 静态字符串(字面量)优化为同一个字符串对象的引用。
    静态字符串对象是“重用”的！
      静态字符串: 字面量(直接量) 常量  字面量和常量连接结果
   
  注意：  
    动态字符串,不会重用为同一个字符串对象！
    动态字符串包括：
     A) new 创建的字符串
     B) 字符串变量连接的结果
    
  结论：
   1) 静态字符串，尽可能重用的，动态字符串不参与重用
   2) == 比较字符串是否一样是不靠谱的！ 
      == 不能用于比较字符串是否相等！
      
  6) “必须”使用 equals 方法比较字符串是否相等！      
    A) == 只能用于比较变量是否相等
    B) equals 方法 才能比较字符串内容是否相等！
    
  7) length() 方法返回的是字符串中字符的个数。
  
字符串的API方法：是常用的字符串计算方法，使用这些
   方法可以简化软件的开发！提高开发效率。
  1) indexOf() 检查一个字符(一个字符串)在字符串
   中位置。
     String comm = "这是一个好东西呀!";
     //             0 1 23 4 
     检查是否包含SB， 返回字符串的位置。
     int index = comm.indexOf("SB");
     index = 4、-1

  2) str.lastLndexOf() 用于从后向前检索字符串
   的位置!
   
  3) substring()
   A) substring(开始，结束)
   B) substring(开始) 从开始位置到字符串结束位置
      全部截取，作为子字符串
  
  4) charAt 获取指定位置是字符。
   
  5) trim() 去除字符串两端的空白字符
   
  6) startsWith和endsWith 检测一个字符串
   以什么为开头或结尾。
   
  7) toLowerCase toUpperCase 用户转换
   字符串中字符的大小写，经常用于消除字符串处理时候
   的大小写影响。
   
  8) valueOf 将任何数据转换为字符串
     在默认情况下，字符串连接过程中，就是调用这个方法
     自动的将任何类型数据转换为字符串再与字符串进行连接
     
     当不能自动将”数据“转换为字符串的情况下，可以手动调用
     这个方法将某种”数据“转换为字符串，继续处理。 
   
  
  
  
  
  