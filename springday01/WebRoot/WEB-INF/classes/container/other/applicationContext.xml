<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    <!-- id要求唯一，类名必须包含完整的包名 -->
    <!-- 用构造器来实例化 -->
    <!-- 作用域
         prototype:(原型)，每getBean一次就会创建一个新的实例
         singleton:(单例，缺省值),只创建一个实例
     -->
	<!-- <bean id="mes" class="container.other.MessageBean" scope="prototype"/> -->
	<!-- 生命周期的相关几个方法
	    init-method：指定初始化方法，容器创建实例后，就会
	          调用该实例的初始化方法
	    destroy-method:指定销毁方法，容器在关闭之前
	           会调用该实例的销毁方法
	           注意：只有scope="singleton"时，销毁方法 才会起作用
	 -->
	 <!-- 
	<bean id="mes" class="container.other.MessageBean" init-method="init" destroy-method="destroy" scope="singleton"/>
	 -->
	 
	 <!-- 延迟加载
	                默认情况下，容器会将所有scope属性配置为singleton的bean创建好
	                如果需要延迟加载（即事先创建好），需要将lazy-init配置为true
	  -->
	 <bean id="mes" class="container.other.MessageBean" lazy-init="true"/>
</beans>