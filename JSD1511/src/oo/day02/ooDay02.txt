回顾:
1.什么是类？什么是对象?
2.如何创建类？如何创建对象?
3.引用类型之间画等号:指向同一个对象
    对其是一个引用的修改影响另外一个
    因为:对象只有一份
4.null:空，没有指向任何对象
       引用的值为null则不能再进行任何操作了
       若操作则NullPointerException

     引用
Cell c     = new Cell();
c.row = 2;
c.col = 5;
c.drop();
c.moveLeft();

class Cell{
  int row; //成员变量
  int col;
  void drop(){} //方法
  void moveLeft(){}
  void moveRight(int n){
    col+=n;
  }
}

Student,StudentTest
Cell,CellTest





System.out.println();
System.out.println("abc");


笔记:
0:方法的签名:方法名+参数列表
1.方法的重载(overload):
  1)在同一个类中，方法名称相同，参数列表不同
  2)编译器根据签名来绑定调用不同的方法
2.构造方法:构造函数、构造器、构建器
  1)给成员变量初始化
  2)与类同名，没有返回值类型
  3)在创建对象(new)时被自动调用
  4)若自己不写构造，则编译器默认提供一个无参构造
    若自己写了构造，则编译器不再默认提供
  5)构造方法可以重载
3.this:指代当前对象，哪个对象调指的就是哪个对象
       在方法中访问成员变量之前默认有个this.
  this的用法:
  1)this.成员变量名-----访问成员变量
  2)this.方法名()-------调用方法
  3)this()--------------调用构造方法
4.引用类型数组:
  1)Cell[] cells = new Cell[4];
    cells[0] = new Cell(2,4);
    cells[1] = new Cell(3,5);
    cells[2] = new Cell(4,6);
    cells[3] = new Cell(5,7);
  2)Cell[] cells = new Cell[]{
      new Cell(2,4),
      new Cell(3,5),
      new Cell(4,6),
      new Cell(5,7)
    };
  3)int[][] arr = new int[3][];
    arr[0] = new int[2];
    arr[1] = new int[3];
    arr[2] = new int[2];
    arr[1][0]=100; //arr中第2个元素中的第1个元素赋值为100
  4)int[][] arr = new int[3][4];
    for(int i=0;i<arr.length;i++){
      for(int j=0;j<arr[i].length;j++){
        arr[i][j] = 100;
      }
    }




1)找对象:T型对象，J型对象，S,Z,O,L,I
2)抽类:T,J,L,O,I,S,Z
3)设计类中的成员变量和方法
4)创建对象并测试


class J{
  Cell[] cells;
  J(){
    this(0,0);
  }
  J(int row,int col){
    cells = new Cell[4];
    cells[0] = new Cell(row,col);
    cells[1] = new Cell(row,col+1);
    cells[2] = new Cell(row,col+2);
    cells[3] = new Cell(row+1,col+2);
  }
  void drop(){
    for(int i=0;i<cells.length;i++){
      cells[i].row++;
    }
  }
  void moveLeft(){
    for(int i=0;i<cells.length;i++){
      cells[i].col--;
    }
  }
  void moveRight(){
    for(int i=0;i<cells.length;i++){
      cells[i].col++;
    }
  }
  void print(){ //测试使用
    for(int i=0;i<cells.length;i++){
      String str = cells[i].getCellInfo();
      System.out.println(str);
    }
  }

}


















T t1 = new T(2,5); //25,26,27,36
T t2 = new T(0,4); //04,05,06,15
T t3 = new T(0,0); //00,01,02,11
T t4 = new T();    //00,01,02,11


class T{
  Cell[] cells;
  T(){
    this(0,0);
  }
  T(int row,int col){
    cells = new Cell[4];
    cells[0] = new Cell(row,col);
    cells[1] = new Cell(row,col+1);
    cells[2] = new Cell(row,col+2);
    cells[3] = new Cell(row+1,col+1);
  }

  void drop(){
    for(int i=0;i<cells.length;i++){
      cells[i].row++;
    }
  }
  void moveLeft(){
    for(int i=0;i<cells.length;i++){
      cells[i].col--;
    }
  }
  void moveRight(){
    for(int i=0;i<cells.length;i++){
      cells[i].col++;
    }
  }
  void print(){ //测试使用
    for(int i=0;i<cells.length;i++){
      String str = cells[i].getCellInfo();
      System.out.println(str);
    }
  }

}




















class Me{
  姓名，年龄，地址，工资，
  老公
}







class Me{
  Hand hand;
}

class Car{
  发动机
}
class 发动机{
  牌子、型号、颜色
}









class J{
}
class L{
}
class O{
}
class I{
}
class S{
}
class Z{
}












RefArrayDemo










3是arr的长度--------------arr.length
4是arr中每个元素的长度----arr[i].length







  arr------------int[][]
  arr[0]---------int[]
  arr[0][0]------int







数组的数组-----专业的叫法



//arr中包含3个元素，每个元素又包含4个元素
int[][] arr = new int[3][4]; //3行4列
for(int i=0;i<3;i++){
  for(int j=0;j<4;j++){
    arr[i][j] = 100;
  }
}
i=2
  j=0 arr20=100
  j=1 arr21=100
  j=2 arr22=100
  j=3 arr23=100
i=1
  j=0 arr10=100
  j=1 arr11=100
  j=2 arr12=100
  j=3 arr13=100
i=0
  j=0 arr00=100
  j=1 arr01=100
  j=2 arr02=100
  j=3 arr03=100









//声明int型数组arr
int  [] arr   = new int[3]; //基本类型数组
Cell [] cells = new Cell[3]; //引用类型数组

//声明int[]型数组arr，包含3个元素
//每个元素为int[]型，默认值为null
int[][] arr   = new int[3][];
arr[0] = new int[2];
arr[1] = new int[3];
arr[2] = new int[2];
//给arr中第2个元素中的第1个元素赋值为100
arr[1][0] = 100;







arr[0]------int[]型











//声明double[]型数组dous，包含10个元素
//每个元素都是double[]型，默认值为null
double[][] dous = new double[10][];













int[] arr = new int[]{
  1,
  4,
  7
};
Cell[] cells = new Cell[]{
  new Cell(2,4),
  new Cell(3,5),
  new Cell(4,6),
  new Cell(5,7)
};









int[] arr   = new int[4];
arr[0] = 5;
int a  = 5;

//声明Cell型数组cells，包含4个元素
//每个元素都是Cell型，默认值为null
Cell[] cells = new Cell[4]; //创建Cell数组对象
cells[0] = new Cell(2,5); //创建Cell对象
cells[1] = new Cell(3,6);
cells[2] = new Cell(4,7);
cells[3] = new Cell(5,8);




cells[0]-----Cell型




















//声明int型数组arr，包含4个元素
//每个元素都是int型，默认值为0
int[] arr = new int[4];


















Cell c1 = new Cell(2,5);
Cell c2 = new Cell(3);
Cell c3 = new Cell();



class Cell{
  int row;
  int col;
  Cell(){
    this(0,0);
  }
  Cell(int n){
    this(n,n); //调2个参数的构造方法
  }
  Cell(int row,int col){
    this.row=row;
    this.col=col;
  }
}

















class Cell{
  int row; //成员变量
  int col;
  Cell(int row,int col){ //局部变量
    this.row = row;
    this.col = col;
  }
  void drop(){
    row++;
  }
}















Cell c = new Cell(2,5);
Cell cc = new Cell(4,6);

class Cell{
  int row;
  int col;
  Cell(int row1,int col1){
    this.row = row1; //cc.row=4;
    this.col = col1; //cc.col=6;
  }
}









c.drop(); //drop中的this指的就是c
cc.drop(); //drop中的this指的就是cc
Cell c = new Cell(); //Cell构造中的this指的就是c






Cell c = new Cell();
c.row = 2;
c.col = 5;
c.drop(); 
c.moveLeft(3);
String str = c.getCellInfo();


Cell cc = new Cell();
cc.row = 6;
cc.col = 4;
cc.drop();
cc.moveLeft(2);


class Cell{
  int row;
  int col;
  void drop(){
    this.row++; //cc.row++; 
  }
  void moveLeft(int n){
    this.col-=n; //cc.col-=2; //c.col=2
  }
  String getCellInfo(){ //3,2
    return this.row+","+this.col; //return c.row+","+c.col;
  }
}











Cell c = new Cell(2,5);
Cell cc = new Cell();

class Cell{
  int row;
  int col;
  Cell(){
  }
  Cell(int row1,int col1){
    row = row1;
    col = col1;
  }
}














Student zs = new Student("zhangsan",25,"廊坊");
Student ls = new Student("lisi",26,"佳木斯");
Student ww = new Student(); //编译错误

class Student{
  String name;
  int age;
  String address;
  //给成员变量赋初值
  Student(String name1,int age1,String address1){
    name = name1;
    age = age1;
    address = address1;
  }
}

//1.创建一个学生对象
//2.调用了Student的构造方法
Student zs = new Student();


Student zs = new Student();
zs.name = "zhangsan";
zs.age = 25;
zs.address = "河北廊坊";

Student ls = new Student();
ls.name = "lisi";
ls.age = 26;
ls.address = "佳木斯";


Student zs = new Student();
zs.setInfo("zhangsan",25,"河北廊坊");

Student ls = new Student();
ls.setInfo("lisi",26,"佳木斯");

























println();
println("zhangsan"); //错误

void println(){
}
void printlnString(String str){
}
void printlnInt(int a){
}
void printlnDouble(double b){
}


System.out.println();
System.out.println(25);
System.out.println("HelloWorld");
System.out.println(8.678);










