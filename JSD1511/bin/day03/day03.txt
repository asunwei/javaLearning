回顾:
1.变量:存数的，代词，指代所存的那个数
    int a;
    int a,b,c;
    int a=250;
    int a;
    a=250;
    int a=5,b=6;
    int c=a+b;
    a=a+10;
    System.out.println(a);
    age,name,address
2.基本数据类型
    int:整型，4个，5,25,250
    long:长整型，8个，5L,25L,10000000000L
    double:浮点型，8个，2.5,6.578
    boolean:布尔型，1个，true,false
    char:字符型，2个，'你','b'
3.数据类型的转换
    byte,short,int,long,float,double
         char
    自动类型转:小到大
    强制类型转:大到小
               (要转换为的类型)变量
    byte b1=5;
    byte b2=6;
    byte b3=(byte)(b1+b2);

4.Scanner的用法
   import java.util.Scanner;
   Scanner scan = new Scanner(System.in);
   System.out.println("请输入年龄:");
   int age = scan.nextInt();
   double price = scan.nextDouble();


int a=10000000000; //编译错误
int a=1000000000*10; //溢出













笔记:
1.运算符:
  1)算术运算符:+,-,*,/,%,++,--
    1.1)%:取模/取余，余数为0即为整除
    1.2)++/--:自增1/自减1，可在变量前也可在变量后
        1.2.1)单独使用时，在前在后无差别
        1.2.2)被使用时，在前在后有差别
                 a++的值为a的值
                 ++a的值为a+1的值
  2)关系运算符:
    2.1)>(大于),<(小于)
	>=(大于或等于),<=(小于或等于)
	==(等于),!=(不等于)
    2.2)关系运算的结果为boolean型
	关系成立则为true，关系不成立则为false
  3)逻辑运算符:
    3.1)&&:短路与(并且)，两边都为真则为真，见false则false
	   第一个数为false，则短路(第二个数不走了)
	   &:不短路与
	||:短路或(或者)，有一边为真则为真，见true则true
	   第一个数为true，则短路(第二个数不走了)
	   |：不短路或
	! :逻辑非(取反)，非真则假，非假则真
    3.2)逻辑运算是建立在关系运算基础之上的
	逻辑运算的结果也是boolean型
  4)赋值运算符:
    4.1)简单赋值运算:=
    4.2)扩展赋值运算:+=,-=,*=,/=,%=
  5)字符串拼接运算符:
    5.1)+:
	5.1.1)若两边都是数字，则做加法运算
	5.1.2)若有一边为字符串，则做字符串连接
  6)三目/条件运算符:
    6.1)语法:
          boolean ? 数1 : 数2
    6.2)执行过程:
          计算boolean的值:
            若为true，则整个的结果为数1
            若为false，则整个的结果为数2
2.分支结构:
  1)if结构:1条路
  2)if...else结构:2条路
  3)if...else if结构:多条路
  4)switch...case结构:多条路
    优点:效率高、结构清晰
    缺点:整数、相等
    break:跳出switch

任务:
1.命令解析程序
2.课后作业+每日一练
3.建议:OperDemo.java

CommandBySwitch

int a=5,b=6;
int max=a>b?a:b;
System.out.println("max="+max);

int a=5,b=6;
int max;
if(a>b){
  max=a;
}else{
  max=b;
}
System.out.println("max="+max);

正好是对整数来判断相等-------首先switch

计算机等级证书---2级证书







A优秀:成绩大于等于90
B良好:成绩大于等于80并且成绩小于90
C中等:成绩大于等于60并且成绩小于80
D不及格:成绩小于60

ScoreLevel



1)ABCD四个档只走其中之一
2)若没有最后的else，ABC并非必走其中之一
3)若有最后的else，ABCD必走其中之一

int score = 65;
if(score>=0 && score<=100){
  if(score>=90){
    A优秀
  }else if(score>=80){
    B良好
  }else if(score>=60){
    C中等
  }else{
    D不及格
  }
}else{
  System.out.println("成绩不合法");
}











if(score>=90){
  A优秀
}else{
  if(score>=80 && score<90){
    B良好
  }else{
    if(score>=60 && score<80){
      C中等
    }else{
      if(score<60){
        D不及格
      }
    }
  }
}












有锅包肉吗?
  有，吃锅包肉
  没有，
    有糖醋里脊吗?
      有，吃糖醋里脊
      没有，
        有拔丝地瓜吗?
	  有，吃拔丝地瓜
	  没有，减肥

几条路:
1.吃锅包肉
2.吃糖醋里脊
3.吃拔丝地瓜
4.减肥


if(有锅包肉吗?){
  吃锅包肉
}else{
  
}








满500打8折-------------------1条路
满500打8折，不满500打9折-----2条路















任何复杂的程序都可以通过三种结构来实现:
1.顺序结构:从上往下逐行执行，每句必走
2.分支结构:有条件的执行某语句，并非每句必走
3.循环结构:


if(boolean){
  //...
}


钱够-----------找零并输出
钱不够---------错误提示









散装-------斤

1斤(1)----------------5.6元
半斤(0.5)-------------2.8元








打8折这个事，是有条件的执行
减100这个事，是有条件的执行





满499减100



满500打8折
double price = 800;

price=price*0.8; //打8折












365/366
平年:2月是28天
闰年:2月是29天

year是不是闰年


闰年的判断公式:
1.能被4整除并且不能被100整除
或者
2.能被400整除


1.year%4==0 && year%100!=0
  ||
2.year%400==0


2000是闰年
2004是闰年
2001不是闰年









int num=18,index;
index=num%5;
System.out.println(index); //3


判断age是否在18到50之间

age>=18
&&
age<=50

18--在
25--在
88--不在
10--不在








!          false true
下雨了吗?  true  false





能结帐吗?    true  true  true false
1.有现金吗?  true  false true false
或者----||
2.有卡吗?    false true  true false





能毕业吗?         false false false true
1.成绩60分以上吗? true  false false true
并且----&&
2.出勤80%以上吗?  false true  false true














想干什么事是由一个条件控制-------关系
想干什么事是由多个条件控制-------逻辑














我的年龄大于你的年龄-----------对/错
        >
我的体重小于或等于你的体重-----对/错
        <=
我的身高等于你的身高-----------对/错
        ==











